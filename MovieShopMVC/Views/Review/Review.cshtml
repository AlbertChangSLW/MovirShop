@model ApplicationCore.Models.PaginatedResultSet<ApplicationCore.Models.ReviewListModel>

@using ApplicationCore.Contracts.Services
@using ApplicationCore.Models
@using MovieShopMVC.Services

@inject ICurrentUser currentUser
@inject IUserService userServer

<div class="rounded">
    <div class="container-fluid">
        @foreach (var reviewList in Model.Data)
        {
            <div class="row">
                <div class="col-3">
                    @(reviewList.FirstName + " " + reviewList.LastName)
                </div>
                <div class="col-1">
                    @reviewList.Rating
                </div>
                <div class="col">
                    @reviewList.ReviewText
                </div>
            </div>
        }
    </div>
</div>

<nav aria-label="...">
    <ul class="pagination">
        <li class="page-item">
            @if (Model.HasPreviousPage)
            {
            <li class="page-item">
                <a class="page-link" href="?pageNumber=@(Model.PageIndex-1)">Previous</a>
            </li>
            }
            else
            {

            <li class="page-item disabled">
                <a class="page-link">Previous</a>
            </li>
            }
            @for (var i = Model.PageIndex; i <= Model.PageIndex + 3 && i <= Model.TotalPages; i++)
            {
            <li class="page-item">
                <a class="page-link" href="?pageNumber=@i">
                        @i
                </a>
            </li>
            }
            @if (Model.HasNextPage)
            {
            <li class="page-item">
                <a class="page-link" href="?pageNumber=@(Model.PageIndex+1)">Next</a>
            </li>
            }
            else
            {

            <li class="page-item disabled">
                <a class="page-link">Next</a>
            </li>
            }
    </ul>
</nav>


@if (await userServer.MovieReviewByUser((int)currentUser.UserId, Model.Data.ElementAt(0).MovieId) != null)
{
    <a class="btn btn-outline-dark me-2 btn-bg:gray btn-color:black" asp-controller="Review" asp-action="UpdateReview"
       asp-route-movieId="@Model.Data.ElementAt(0).MovieId">Update Review</a>
    
    <a class="btn btn-outline-dark me-2 btn-bg:gray btn-color:black" asp-controller="Review" asp-action="DeleteReview"
       asp-route-movieId="@Model.Data.ElementAt(0).MovieId">Delete Review</a>
}
else{
    <a class="btn btn-outline-dark me-2 btn-bg:gray btn-color:black" asp-controller="Review" asp-action="UpdateReview"
       asp-route-movieId="@Model.Data.ElementAt(0).MovieId">Add Review</a>
}